blueprint:
  name: AirExchange
  description: >
    Automation for outside air exchange.  All measurements must be in same format (ie. don't mix celsius and farenheit.)

    **Version**: 2024.7.1-1
  domain: automation
  source_url: https://github.com/rwalker777/HA-Blueprints/blob/main/Fresh-air.yaml  
  homeassistant:
    min_version: 2024.6.0

  input:
    Outdoor:
      name: Outdoor temperature, humidity and air quality
      input:
        outdoor_temp:
          name: Outdoor temperature
          description: Outdoor temperature source
          selector:
            multiple: false
            device:
              entity:
                - device_class: temperature
                - domain: weather
        outdoor_humidity:
          name: Outdoor humidity
          description: Outdoor humidity source
          selector:
            device:
              multiple: false
              entity:
                - device_class: humdiity
                - domain: weather
        outdoor_aqi:
          name: Outdoor air quality
          description: Outdoor air quality source
          selector:
            device:
              multiple: false
              entity:
                - device_class: aqi
        outdoor_aqi_level:
          name: Outdoor air quality level
          description: Outdoor air quality maximum level - above this fresh air is disabled
          default: 101
          selector:
            number:
              min: 50
              max: 300
    Indoor:
      name: Indoor temperature, humidity and CO2
      input:
        fan:
          name: Fan
          description:
          selector:
            entity:
              multiple: false
              domain:
                - climate
                - fan
                - switch
        indoor_temp:
          name: Indoor temperature
          description: Indoor temperature source
          selector:
            device:
              multiple: false
              entity:
                - device_class: temperature
        indoor_temp_upper:
          name: Indoor temperature upper limit
          description: Target temperature range upper limit
          default: 80
          selector:
            number:
              min: 0
              max: 100
              unit_of_measurement: degree
        indoor_temp_lower:
          name: Indoor temperature lower limit
          description: Target temperature range lower limit
          default: 70
          selector:
            number:
              min: 0
              max: 100
              unit_of_measurement: degree
        indoor_humidity:
          name: Indoor humidity
          description: Indoor humidity source
          selector:
            device:
              multiple: false
              entity:
                - device_class: humdiity
        indoor_humidity_upper:
          name: Indoor humidity upper limit
          description: Target humidity range upper limit
          default: 65
          selector:
            number:
              min: 0
              max: 100
              unit_of_measurement: percentage
        indoor_c02:
          name: Indoor CO2
          description: Indoor CO2 source
          default: []
          selector:
            device:
              multiple: false
              entity:
                - device_class: carbon_dioxide
        indoor_c02_level:
          name: Indoor CO2 limit
          description: Indoor CO2 level that forces air circulation
          default: 1000
          selector:
            number:
              min: 0
              max: 2000


#############
mode: single
variables:
  indoor_co2_entity: !input indoor_c02
  co2_enabled: "{{ indoor_c02_entity != [] }}"
  aqi_entity: !input outdoor_aqi
  aqi_level: !input outdoor_aqi_level
  above_aqi: "{{ aqi_entity > aqi_level }}"
  indoor_humidity_entity: !input indoor_humidity
  indoor_humidity_level: !input indoor_humidity_upper
  above_humidity: "{{ indoor_humidity_entity > indoor_humidity_level }}"

##### Triggers #####
trigger:
  - alias: 'TempOn'
    id: 'TempOn'
    domain: sensor
    type: temperature
    entity_id: !input indoor_temp
    above: !input indoor_temp_upper
    below: !input indoor_temp_lower
    for:
      minutes: 1
  - alias: 'CO2'
    id: 'CO2'
    enabled: "{{ co2_enabled }}"
    platform: numeric_state
    entity_id: !input indoor_c02
    above: !input indoor_c02_level
    for:
      minutes: 1

##### Actions ######
action:
  choose:
    - conditions: "{{ trigger.alias == ''TempOn' }}"
      alias: 'TempOn'
      sequence:
        - variables:
            upper_temp: !input indoor_temp_upper
            lower_temp: !input indoor_temp_lower
            outdoor_temp: !input outdoor_temp
        - if: 
          - condition: template
            value_template: "{{ (( upper_temp | int + 1 > outdoor_temp ) or ( lower_temp | int + 1 < outdoor_temp )) and not ( above_aqi and above_humidity ) }}"
          then:
            sequence:
              - type: turn_on
                entity_id: !input fan
              - wait_for_trigger:
                - platform: template
                  value_template: "{{ ( upper_temp | int <= outdoor_temp ) or ( lower_temp | int >= outdoor_temp ) }}"
                  
    # If CO2 above limit turn on until below for 1 minute ignoring air quality
    - conditions: "{{ trigger.id == ''CO2'' }}"
      alias: 'CO2High'
      sequence:
        - variables:
            co2_level: !input indoor_c02_level
        - type: turn_on
          entity_id: !input fan
        - wait_for_trigger:
          - platform: template
            value_template: "{{ co2_level <= indoor_co2_entity }}"